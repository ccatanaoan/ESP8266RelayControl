Version=2.2
NumberOfModules=0
Build1=Default,B4RDev
NumberOfFiles=0
NumberOfLibraries=4
Library1=rcore
Library2=resp8266
Library3=resp8266wifi
Library4=rmqtt
@EndOfDesignText@

#Region Project Attributes
	#AutoFlushLogs: True
	#CheckArrayBounds: True
	#StackBufferSize: 300
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'Public variables can be accessed from all modules.
	Public Serial1 As Serial
	Private d1pins As D1Pins
	Private pin16 As Pin
	Private d6 As Pin
	Private WiFi As ESP8266WiFi
	Private WiFiStr As WiFiSocket
	Private MQTT As MqttClient
	Private MQTTOpt As MqttConnectOptions
	Private MQTTUser As String = "dbgdbcqw"
	Private MQTTPassword As String = "Nc3F4APoO801"
	Private MQTTHostName As String = "m14.cloudmqtt.com"
	Private MQTTPort As Int = 15093
	Private StopRelay As Boolean = False
End Sub

'static const uint8_t D0   = 16;
'static const uint8_t D1   = 5;
'static const uint8_t D2   = 4;
'static const uint8_t D3   = 0;
'static const uint8_t d4   = 2;
'static const uint8_t D5   = 14;
'static const uint8_t D6   = 12;
'static const uint8_t D7   = 13;
'static const uint8_t D8   = 15;
'static const uint8_t D9   = 3;
'static const uint8_t D10  = 1;
Private Sub AppStart
	Serial1.Initialize(115200)
	Log("AppStart")
	' Pin 2 is the blue LED
	' Pin 16 is the red LED
	' D6 = pin 12 is the logic/signal pin. Use 3.3v pin of Node MCU.
	
	pin16.Initialize(16, pin16.MODE_OUTPUT)
	d6.Initialize(d1pins.D6, d6.MODE_OUTPUT)
	
	' MQTT
	WiFi.Connect2("CloydNote8", "adjj6347")
	If WiFi.IsConnected Then 
		Log("Connected to WiFi, Local IP ", WiFi.LocalIp) 
	Else 
		Log("Not Connected to WiFi")
	End If

	' Connect to CloudMQTT broker
	Dim ClientId As String = Rnd(0, 999999999) 'create a unique id
	MQTT.Initialize2(WiFiStr.stream, MQTTHostName, MQTTPort, ClientId, "MQTT_MessageArrived", "MQTT_Disconnected")
	MQTTOpt.Initialize(MQTTUser, MQTTPassword)
	MQTT_Connect(0)
	
	' Infinite loop
	RelayOpen(0)
End Sub

Sub MQTT_Connect(Unused As Byte)
	If MQTT.Connect = False Then
		Log("Trying to connect to broker")
		MQTT.Connect2(MQTTOpt)
		CallSubPlus("MQTT_Connect", 1000, 0)
	Else
		Log("Connected to broker")

		MQTT.Subscribe("Andy", 0)
	End If
End Sub

Private Sub RelayClose (tag As Byte)
	If StopRelay Then
		Return
	End If
	Log("Relay Close")
	MQTT.Publish("Andy","Opening the relay")
	d6.DigitalWrite(True)
	pin16.DigitalWrite(True)
	CallSubPlus("RelayOpen", 15000, 0)
End Sub

Private Sub RelayOpen (tag As Byte)
	If StopRelay Then
		Return
	End If
	Log("Relay Open")
	MQTT.Publish("Andy","Closing the relay")
	d6.DigitalWrite(False)
	pin16.DigitalWrite(False)
	CallSubPlus("RelayClose", 5000, 0)
End Sub

Sub mqtt_MessageArrived (Topic As String, Payload() As Byte)
	Log("Message arrived. Topic=", Topic, " payload: ", Payload)
	If Payload="stop" Then
		MQTT.Publish("Andy","Closing the relay remotely")
		d6.DigitalWrite(True)
		pin16.DigitalWrite(True)
		StopRelay = True
	Else If Payload="start" Then
		MQTT.Publish("Andy","Opening the relay remotely")
		StopRelay = False
		RelayOpen(0)
	End If
End Sub

Sub mqtt_Disconnected
	Log("MQTT_Disconnected")
	MQTT.Close
	MQTT_Connect(0)
End Sub

